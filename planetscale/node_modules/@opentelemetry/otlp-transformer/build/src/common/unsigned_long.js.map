{"version":3,"file":"unsigned_long.js","sourceRoot":"","sources":["../../../src/common/unsigned_long.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2009 The Closure Library Authors\n * Copyright 2020 Daniel Wirtz / The long.js Authors.\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Original version by long.js: https://github.com/dcodeIO/long.js/\n\nconst TWO_PWR_32 = (1 << 16) * (1 << 16);\n\nexport class UnsignedLong {\n  low: number;\n  high: number;\n\n  constructor(low: number, high: number) {\n    this.low = low;\n    this.high = high;\n  }\n\n  static fromU32(value: number): UnsignedLong {\n    return new UnsignedLong(value % TWO_PWR_32 | 0, 0);\n  }\n\n  multiply(value: UnsignedLong): UnsignedLong {\n    const a48 = this.high >>> 16;\n    const a32 = this.high & 0xffff;\n    const a16 = this.low >>> 16;\n    const a00 = this.low & 0xffff;\n\n    const b48 = value.high >>> 16;\n    const b32 = value.high & 0xffff;\n    const b16 = value.low >>> 16;\n    const b00 = value.low & 0xffff;\n\n    let c48 = 0;\n    let c32 = 0;\n    let c16 = 0;\n    let c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xffff;\n\n    return new UnsignedLong((c16 << 16) | c00, (c48 << 16) | c32);\n  }\n\n  add(value: UnsignedLong): UnsignedLong {\n    const a48 = this.high >>> 16;\n    const a32 = this.high & 0xffff;\n    const a16 = this.low >>> 16;\n    const a00 = this.low & 0xffff;\n\n    const b48 = value.high >>> 16;\n    const b32 = value.high & 0xffff;\n    const b16 = value.low >>> 16;\n    const b00 = value.low & 0xffff;\n\n    let c48 = 0;\n    let c32 = 0;\n    let c16 = 0;\n    let c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 + b48;\n    c48 &= 0xffff;\n\n    return new UnsignedLong((c16 << 16) | c00, (c48 << 16) | c32);\n  }\n\n  static fromString(str: string): UnsignedLong {\n    let result = UnsignedLong.fromU32(0);\n\n    for (let i = 0; i < str.length; i += 8) {\n      const size = Math.min(8, str.length - i);\n      const value = parseInt(str.substring(i, i + size));\n      if (size < 8) {\n        const power = UnsignedLong.fromU32(Math.pow(10, size));\n        result = result.multiply(power).add(UnsignedLong.fromU32(value));\n      } else {\n        result = result.multiply(UnsignedLong.fromU32(100_000_000));\n        result = result.add(UnsignedLong.fromU32(value));\n      }\n    }\n\n    return result;\n  }\n}\n"]}